source("~/Dropbox/hsf/courses/ewa/ewa_all/rmd_festuca/r_festuca_solutions.R", echo=TRUE)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
pdf("test.pdf")
ggplot(festuca_stats,
aes(x = Calluna, y = Means, fill = pH,
ymin = Means - SEs, ymax = Means + SEs)) +
# this adds the mean
geom_col(position = position_dodge()) +
# this adds the error bars
geom_errorbar(position = position_dodge(0.9), width=.2) +
# controlling the appearance
xlab("Calluna") + ylab("Festuca yield (g dry weight)")
dev.off()
ggsave("test2.pdf", device = pdf)
ggsave("test2.pdf", width = 100, device = pdf)
ggsave("test2.pdf", width = 2cm, device = pdf)
ggsave("test2.pdf", width = 2 cm, device = pdf)
ggsave("test2.pdf", width = 2, height = 9, device = pdf)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
setwd("~/Dropbox/hsf/courses/ewa/ewa_all")
rm(list = ls())
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, rstatix, ggpubr, agricolae)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
data_present <- data.frame(
Condition = rep(c("Calluna Present"), each = 5),
`pH 3.5` = c(2.76, 2.39, 3.54, 3.71, 2.49),
`pH 5.5` = c(3.21, 4.10, 3.04, 4.13, 5.21),
check.names = FALSE
)
data_present
data_absent <- data.frame(
Condition = rep(c("Calluna Absent"), each = 5),
`pH 3.5` = c(4.10, 2.72, 2.28, 4.43, 3.31),
`pH 5.5` = c(5.92, 7.31, 6.10, 5.25, 7.45),
check.names = FALSE
)
data_absent
combined_data <- rbind(data_present, data_absent)
combined_data
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
?bind_rows
df <- bind_rows(data_absent, data_present)
df
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
festuca <- data %>%
pivot_longer(cols = starts_with("pH"),
names_to = "pH",
values_to = "Weight") |>
rename(Calluna = Condition)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
festuca
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
setwd("~/Dropbox/hsf/courses/ewa/ewa_all")
rm(list = ls())
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, rstatix, ggpubr, agricolae)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
data_present <- data.frame(
Condition = rep(c("Calluna Present"), each = 5),
`pH 3.5` = c(2.76, 2.39, 3.54, 3.71, 2.49),
`pH 5.5` = c(3.21, 4.10, 3.04, 4.13, 5.21),
check.names = FALSE
)
data_present
data_absent <- data.frame(
Condition = rep(c("Calluna Absent"), each = 5),
`pH 3.5` = c(4.10, 2.72, 2.28, 4.43, 3.31),
`pH 5.5` = c(5.92, 7.31, 6.10, 5.25, 7.45),
check.names = FALSE
)
data_absent
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
?bind_rows
data <- bind_rows(data_present, data_absent)
data
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
festuca <- data %>%
pivot_longer(cols = starts_with("pH"),
names_to = "pH",
values_to = "Weight") |>
rename(Calluna = Condition)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
festuca
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
festuca
?pivot_longer
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
setwd("~/Dropbox/hsf/courses/ewa/ewa_all")
rm(list = ls())
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, rstatix, ggpubr, agricolae)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
data_present <- data.frame(
Condition = rep(c("Calluna Present"), each = 5),
`pH 3.5` = c(2.76, 2.39, 3.54, 3.71, 2.49),
`pH 5.5` = c(3.21, 4.10, 3.04, 4.13, 5.21),
check.names = FALSE
)
data_present
data_absent <- data.frame(
Condition = rep(c("Calluna Absent"), each = 5),
`pH 3.5` = c(4.10, 2.72, 2.28, 4.43, 3.31),
`pH 5.5` = c(5.92, 7.31, 6.10, 5.25, 7.45),
check.names = FALSE
)
data_absent
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
?bind_rows
data <- bind_rows(data_present, data_absent)
data
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
festuca <- data %>%
pivot_longer(cols = starts_with("pH"),
names_to = "pH",
values_to = "Weight") |>
rename(Calluna = Condition)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
setwd("~/Dropbox/hsf/courses/ewa/ewa_all")
rm(list = ls())
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, rstatix, ggpubr, agricolae)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
data_present <- data.frame(
Condition = rep(c("Calluna Present"), each = 5),
`pH 3.5` = c(2.76, 2.39, 3.54, 3.71, 2.49),
`pH 5.5` = c(3.21, 4.10, 3.04, 4.13, 5.21),
check.names = FALSE
)
data_present
data_absent <- data.frame(
Condition = rep(c("Calluna Absent"), each = 5),
`pH 3.5` = c(4.10, 2.72, 2.28, 4.43, 3.31),
`pH 5.5` = c(5.92, 7.31, 6.10, 5.25, 7.45),
check.names = FALSE
)
data_absent
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
?bind_rows
data <- bind_rows(data_present, data_absent)
data
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
festuca <- data %>%
pivot_longer(cols = starts_with("pH"),
names_to = "pH",
values_to = "Weight") |>
rename(Calluna = Condition)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
setwd("~/Dropbox/hsf/courses/ewa/ewa_all")
rm(list = ls())
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, rstatix, ggpubr, agricolae)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
data_present <- data.frame(
Condition = rep(c("Calluna Present"), each = 5),
`pH 3.5` = c(2.76, 2.39, 3.54, 3.71, 2.49),
`pH 5.5` = c(3.21, 4.10, 3.04, 4.13, 5.21),
check.names = FALSE
)
data_present
data_absent <- data.frame(
Condition = rep(c("Calluna Absent"), each = 5),
`pH 3.5` = c(4.10, 2.72, 2.28, 4.43, 3.31),
`pH 5.5` = c(5.92, 7.31, 6.10, 5.25, 7.45),
check.names = FALSE
)
data_absent
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
?bind_rows
data <- bind_rows(data_present, data_absent)
data
## ----echo=FALSE--------------------------------------------------------------------------------------------------------------------------------
festuca <- data %>%
pivot_longer(cols = starts_with("pH"),
names_to = "pH",
values_to = "Weight") |>
rename(Calluna = Condition)
## ----echo=TRUE---------------------------------------------------------------------------------------------------------------------------------
festuca
## Creating/Saving the object named "data1"
data1 <-
festuca %>%
group_by(Calluna) %>%
mutate(m = mean(Weight))
## Using the data1 object after it's been saved above (WITHOUT an ungroup)
data1 %>%
mutate(x = mean(Weight))
## Creating/Saving the object named "data1"
data1 <-
festuca %>%
group_by(Calluna) %>%
mutate(m = mean(Weight)) |
data1
## Using the data1 object after it's been saved above (WITHOUT an ungroup)
data1 %>%
mutate(x = mean(Weight))
## Using the data1 object after it's been saved above (WITHOUT an ungroup)
data1 %>%
mutate(overall_mean = mean(Weight))
## Creating/Saving the object named "data1"
data1 <-
festuca |>
group_by(Calluna) |>
mutate(m = mean(Weight)) |>
ungroup()
data1
## Using the data1 object after it's been saved above (WITHOUT an ungroup)
data1 %>%
mutate(overall_mean = mean(Weight))
## Creating/Saving the object named "data1"
data1 <-
festuca |>
group_by(Calluna) |>
mutate(mean_Calluna = mean(Weight)) |>
ungroup() |>
mutate(mean_overall = mean(Weight))
data1
?aov
?rowwise
install.packages("ggmap")
library(ggmap)
locs <- c('Jiron Cuzco 423, Magdalena del Mar', 'Av Nicolas Arriola 500, La Victoria')
geocode(locs)
install.packages("osrm")
??osrm
??osrmtable
help.search("osrm")
install.packages('tidygeocoder')
library("tidygeocoder")
# create a dataframe with addresses
some_addresses <- tibble::tribble(
~name,                  ~addr,
"White House",          "1600 Pennsylvania Ave NW, Washington, DC",
"Transamerica Pyramid", "600 Montgomery St, San Francisco, CA 94111",
"Willis Tower",         "233 S Wacker Dr, Chicago, IL 60606"
)
library("tidygeocoder")
# create a dataframe with addresses
some_addresses <- tibble::tribble(
~name,                  ~addr,
"White House",          "1600 Pennsylvania Ave NW, Washington, DC",
"Transamerica Pyramid", "600 Montgomery St, San Francisco, CA 94111",
"Willis Tower",         "233 S Wacker Dr, Chicago, IL 60606"
)
View(some_addresses)
# geocode the addresses
lat_longs <- some_addresses %>%
geocode(addr, method = 'osm', lat = latitude , long = longitude)
View(lat_longs)
