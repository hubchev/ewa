---
title             : "Descriptive Statistics of the NRW80+ Dataset"
shorttitle        : "Descriptive Statistics of the NRW80+ Dataset"

author: 
  - name          : "Prof. Dr. Stephan Huber"
    affiliation   : "1,2"
    corresponding : yes    # Define only one corresponding author
    address       : "Im Mediapark 4e"
    email         : "stephan.huber@hs-fresenius.de"
    # role: # Contributorship roles (e.g., CRediT, https://credit.niso.org/)
    #   - "Conceptualization"
    #   - "Writing - Original Draft Preparation"
    #   - "Writing - Review & Editing"
  # - name          : "Ernst-August Doelle"
  #   affiliation   : "1,2"
  #   role:
  #     - "Writing - Review & Editing"
  #     - "Supervision"

affiliation:
  - id            : "1"
    institution   : "Fresenius University of Applied Science"
  - id            : "2"
    institution   : "Charlotte Fresenius University"

authornote: |
  All files related to that paper are hostes on github. see: [https://github.com/hubchev/courses/tree/main/rmd/rmd_desc](https://github.com/hubchev/courses/tree/main/rmd/rmd_desc). 

abstract: |
  In this paper, I explain how to read in NRW80+ data from @Zank2022Quality into R. I also provide first summary and descriptive statistics. The paper follows the APA style, using the R template from the 'papaja' package of @R-papaja.

  

  
  
keywords          : "papaja, NRW80+, descriptive statistics"
wordcount         : "`r wordcountaddin::word_count('desc_NRW80.Rmd')`"

bibliography      : "references_NRW.bib"

floatsintext      : no
linenumbers       : no
draft             : no
mask              : no
numbersections    : true

figurelist        : no
tablelist         : no
footnotelist      : no

classoption       : "doc"
output            : papaja::apa6_pdf
---

```{r setup, include = FALSE}
library("tinylabels")
library("papaja")
r_refs("r-references.bib")
```

```{r analysis-preferences}
# Seed for random number generation
set.seed(42)
knitr::opts_chunk$set(cache.extra = knitr::rand_seed)
rm(list = ls())
```

# Technical Note

In the following, I load (and install) packages that I use later on and I show information about my R session with `sessionInfo()`. 

```{r, echo=TRUE, eval=TRUE}
# install.packages("pacman")

# load packages that are already installed and install packages that are not 
# installed yet and then load them:
pacman::p_load(tinylabels, 
               haven, 
               labelled, 
               janitor,
               skimr, 
               rstatix, 
               HH, 
               likert, 
               expss,
               tidyr, 
               ggstats,
               psych,
               sjlabelled,
               tidyverse)

sessionInfo()
```


# Import Data

I host a R script on my GitHub account (see [https://raw.githubusercontent.com/hubchev/courses/main/scr/readin_GESIS.R](https://raw.githubusercontent.com/hubchev/courses/main/scr/readin_GESIS.R)) that explains how to import the NRW80+ data: 

```{r, eval=FALSE, echo=TRUE}
# set working directory
setwd("/home/sthu/Dropbox/hsf/23-ws/ewa/")

# clear the environment
rm(list = ls())

# load packages
# install.packages("haven")
# install.packages("tidyverse")
library("haven")
library("tidyverse")

# Data manually downloaded from: 
# Zank, Susanne, Woopen, Christiane, Wagner, Michael, Rietz, Christian, & 
# Kaspar, Roman (2022). Quality of Life and Well-being of Very Old People in 
# NRW (Representative Survey NRW80+) Cross-Section Wave 1. GESIS, Cologne. 
# ZA7558 Data file Version 2.0.0, https://doi.org/10.4232/1.13978.

# All source data and information to the data can be found in the subfolder 
# "source".

# unzip the ZA7558_v2-0-0.dta.zip and save it in data
unzip("source/ZA7558_v2-0-0.dta.zip", exdir = "data/.")

# read in the data
dfdta <- read_dta("data/ZA7558_v2-0-0.dta")
dfsav <- read_sav("source/ZA7558_v2-0-0.sav")

# check if both formats provide the same data
all.equal(dfdta, dfsav)

# --> this is NOT the case. The labels and missings are treated differently. 

# save the environment
save.image(file="data/gesis.RData")

```

# How to Use the NRW80+ Data

## Load and Subset Data

I load the data and select some variables that are of particular interest to me.

```{r echo=TRUE}
getwd()
load("data/gesis.RData")

df <- dfsav |>
  select(starts_with("alter"), 
         ALT_agegroup, 
         ALT_sex, 
         famst1, famst7, 
         demtectcorr, 
         kogstat, 
         final, 
         geschlecht)
```

For simplification, let us focus on the questions that refer to the "Experience of Ageing" and create a new dataset `df_alterl` that contains only those questions:


```{r, echo=TRUE}
df_alterl <- df |> 
  select(alterl1, 
         alterl2, 
         alterl3, 
         alterl4, 
         alterl5, 
         alterl6, 
         alterl7, 
         alterl8, 
         alterl9, 
         alterl10) |>
  drop_unused_labels()

summary(df_alterl)
```



## Get an Overview by Counting

With the `table()` function, you can count how many observations of each unique value a variable contains:

```{r, echo=TRUE}
table(df_alterl$alterl1)
```

To do that for each variable of a dataset is easy using `~`, the pipe operator, and `map()` of the package `purrr` [@Wickham2023purrr]:

```{r, echo=TRUE}
df_alterl |> 
  map(~ table(.))
```

Using `proportions()` returns the conditional proportions:

```{r, echo=TRUE}
df_alterl |> 
  map(~ proportions(table(.)))
```

With `tabyl()` which is part of `janitor` [@Firke2023janitor], we can get both nicely:

```{r, echo=TRUE}
df_alterl |> 
  tabyl(alterl1) 

df_alterl |> 
  select(starts_with("alterl")) |> 
  map(~ tabyl(.))
```

### First Summary Statistics

First, I am interested in the class of the data and some very basic summary statistics.

```{r, echo=TRUE}
summary(df)

sumstat_alter <- df |> 
  get_summary_stats(
    alterl1, 
    alterl2, 
    alterl3, 
    alterl4, 
    alterl5, 
    alterl6, 
    alterl7, 
    alterl8, 
    alterl9, 
    alterl10,  
    type = "five_number")  

sumstat_alter

sumstat_alter_psych <- df |>
  select(starts_with("alterl")) |> 
  psych::describe() |> 
  as_tibble(rownames="Question")  |> 
  select(-skew, -kurtosis, -range, -vars) 

sumstat_alter_psych
```


```{r echo=TRUE}
descriptives <- dfdta |>  
  # filter(alterl1 > 0) |> 
  group_by(geschlecht)  |> 
  summarize(
    Mean = mean(alterl1)
    , Count = n()
    , SD = sd(alterl1)
    , Min = min(alterl1)
    , Max = max(alterl1)
  )

descriptives
```


## Make APA Tables

The R output is not publishable because the output must be in a table with a caption and some other formatting stuff according to APA rules. This can be done with the function `apa_table()` which is further explained in @Aust2020papaja[section 4.2].



```{r tabrstatix, echo=TRUE}
apa_table(
  sumstat_alter
  , caption = "Summary Statistics: Experience of Ageing."
  , note = "This table contains all variables of `alterl*`."
  , escape = TRUE
  )
```


```{r tabsumstatalterpsych, echo = TRUE }
apa_table(
  sumstat_alter_psych
  , caption = "Summary Statistics: Experience of Ageing (psych)"
  , note = "This table contains all variables of `alterl*`."
  , escape = TRUE
)
```

```{r tabdescriptives, echo=TRUE}
apa_table(
  descriptives
  , caption = "Experience of Ageing: Valuing Relationships and Other People 
  More (By Gender)"
  , escape = TRUE
)
```

Table \@ref(tab:tabrstatix) was created with the function `get_summary_stats()` of the `rstatix` package [@Kassambara2023rstatix], Tables \@ref(tab:tabsumstatalterpsych) and \@ref(tab:tabsumstatalterpsychbal) were created with the function `describe()` of the `psych` package [@WilliamRevelle2023psych], and Table \@ref(tab:tabdescriptives) was created with the function `summarize()` of the `dplyr` package [@Wickham2023dplyr].

## Use the Likert Scale 

We have seen that the data contain not only the five different (Likert scaled) answers. Thus, let us remove all values that have, in one or multiple questions, no answer of the Likert scale. The cleaned dataset is named `df_alterl_balance`.

```{r, echo=TRUE}
df_alterl_balance <- df_alterl %>%
  rowwise() %>%
  mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0)) |> 
  filter(has_negative == 0) |> 
  select(starts_with("alter")) |> 
  as_tibble()
```

Using the `gglikert()` of the `ggstats` package [@Larmarange2023ggstats] allows us to draw nice graphs. I highly recommend reading the vignette of the package in the R documentation which you get with `vignette("gglikert")`.

Figures \@ref(fig:likertalterl1) and \@ref(fig:likertalterl3) shows the proportions of answers using `df_alterl` data and Figures \@ref(fig:likertalterl2) and \@ref(fig:likertalterl4) does so using the `df_alterl_balance` data whereby the latter to show the proportions stacked. Do you see any difference and can you explain the differences? 

```{r likertalterl1,  fig.cap="Experience of Ageing: Proportions of Answers (df_alterl)", echo=TRUE}
gglikert(df_alterl, 
         exclude_fill_values = c("Wei√ü nicht", "Verweigert"),
         sort = "ascending"
         )
```


```{r likertalterl2,  fig.cap="Experience of Ageing: Proportions of Answers (df_alterl_balance)", echo=TRUE}
gglikert(df_alterl_balance,
         sort = "ascending"
         )
```

```{r likertalterl3,  fig.cap="Experience of Ageing: Proportions of Answers - Stacked (df_alter)", echo=TRUE}
gglikert_stacked(df_alterl,
                 sort = "ascending"
                 )
```


```{r likertalterl4,  fig.cap="Experience of Ageing: Proportions of Answers - Stacked (df_alterl_balance)", echo=TRUE}
gglikert_stacked(df_alterl_balance,
                 sort = "ascending"
                 )
```

As we are interested in the differences of the two samples, it makes sense to look as the summary statistics for the `df_alter_balance` sample. This is shown in Table 


```{r tabsumstatalterpsychbal, echo=TRUE}
sumstat_alter_psych_bal <- df_alterl_balance |>
  psych::describe() |> 
  as_tibble(rownames="Question")  |> 
  select(-skew, -kurtosis, -range, -vars) 

apa_table(
  sumstat_alter_psych_bal
  , caption = "Summary Statistics: Experience of Ageing - balanced (psych)"
  , note = "This table contains all variables of `alterl*` and only observations where all questions had been answered."
  , escape = TRUE
)
```



\clearpage

# References

::: {#refs custom-style="Bibliography"}
:::
