---
title: "Exercise: Two-way ANOVA in R"
author: "Stephan Huber"
date: "2024-06-04"

format:
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
  html:
    number_sections: yes
    embed-resources: true
    
bibliography: lit.bib
csl: "https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl"
abstract: "This is an exercise where data management with the `dplyr` functions `pivot_longer`,
  `rename`, and `bind_rows` is practiced. Moreover, I exemplify how an ANOVA analysis
  can be executed with R. Doing so I refer to the content of @Childs2021APS[chapter
  27]. All data to this exercise can be found in @Huber2024Empirisch. \n"
---

# Read

Read @Childs2021APS: [27.2 Competition between Calluna and Festuca](https://dzchilds.github.io/stats-for-bio/two-way-anova-in-r.html).

Our goal is to learn how to work with two-way ANOVA models in R, using an example from a plant competition experiment. The work flow is very similar to one-way ANOVA in R. We’ll start with the problem and the data, and then work through model fitting, evaluating assumptions, significance testing, and finally, presenting the results.

# Set up the R session 

Download and open the script that you find [here](https://raw.githubusercontent.com/hubchev/ewa/main/rmd_festuca/r_festuca.R). This script contains all the code that is shown below. The solutions to the exercises can be found [here](https://raw.githubusercontent.com/hubchev/ewa/main/rmd_festuca/r_festuca_solutions.R).

```{r, echo=TRUE, message=FALSE}
rm(list = ls())

if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, rstatix, ggpubr, agricolae)
```

# Create a data frame 

Plants have an optimal soil pH for growth, and this varies between species. Consequently we would expect that if we grow two plants in competition with each other at different pH values the effect of competition might vary according to the soil pH. In a recent study the growth of the grass Festuca ovina (Sheep’s Fescue) in competition with the heather Calluna vulgaris (Ling) was investigated in soils with different pH. Calluna is well adapted to grow on very acidic soils such as on the Millstone grit and blanket bogs around Sheffield. Festuca grows on soils with a much wider range of pH. We might hypothesise that Calluna will be a better competitor of Festuca in very acid soils than in moderately acid soils. Here are the data:  The column (Weight) contains the Festuca dry weights, (pH) contains the codes for the pH treatment (levels: pH3.5, pH5.5), the column (Calluna) contains the codes for the presence or absence of Calluna (levels: Present, Absent).

```{r, echo=TRUE}
data_present <- data.frame(
  Condition = rep(c("Calluna Present"), each = 5),
  `pH 3.5` = c(2.76, 2.39, 3.54, 3.71, 2.49),
  `pH 5.5` = c(3.21, 4.10, 3.04, 4.13, 5.21),
  check.names = FALSE
)
data_present

data_absent <- data.frame(
  Condition = rep(c("Calluna Absent"), each = 5),
  `pH 3.5` = c(4.10, 2.72, 2.28, 4.43, 3.31),
  `pH 5.5` = c(5.92, 7.31, 6.10, 5.25, 7.45),
  check.names = FALSE
)
data_absent
```

# Make the data "long"

Read the [R documentation](https://dplyr.tidyverse.org/reference/bind_rows.html) of the function `bind_rows` which is part of the  `dplyr` package. 

Combine the objects `data_present` and `data_absent`.

```{r, echo=FALSE}
?bind_rows
data <- bind_rows(data_present, data_absent)
data
```

Read @Wickham2023R: [5.3 Lengthening data](https://r4ds.hadley.nz/data-tidy#sec-pivoting).

```{r, echo=FALSE}
festuca <- data %>%
  pivot_longer(cols = starts_with("pH"), names_to = "pH", values_to = "Weight") |> 
  rename(Calluna = Condition) 
```

Rearrange the data so that they look like this:
```{r, echo=TRUE}
festuca
```


# Descriptive statistics

```{r, echo=FALSE, message=FALSE}
summary_stats <- festuca |> 
  group_by(Calluna, pH) |> 
  summarize(
    mean = mean(Weight),
    var = var(Weight)
  ) |> 
  ungroup()
```

Calculate the following statistics and graphs:

```{r, echo=TRUE}
summary_stats
```


```{r echo=FALSE}
ggplot(data = festuca, aes(x = Calluna, y = Weight, colour = pH)) + 
  geom_boxplot()
```

# ANOVA 

Use this model to calculate the ANOVA: `Weight ~ pH + Calluna + pH:Calluna`

```{r, echo=FALSE}
festuca_model <- aov(Weight ~ pH + Calluna + pH : Calluna, data = festuca)
```

```{r, echo=FALSE}
anova(festuca_model)
```

# Diagnostics 

Read @Childs2021APS: [27.5 Diagnostics](https://dzchilds.github.io/stats-for-bio/two-way-anova-in-r.html#diagnostics). Moreover, [this page](https://www.datanovia.com/en/lessons/anova-in-r/) is worth a look. You find some alternatives R functions that you may find helpful for ANOVA diagnostics.

```{r, echo=TRUE}
plot(festuca_model, which = 2, add.smooth = FALSE)
```


```{r, echo=TRUE}
plot(festuca_model, which = 3, add.smooth = FALSE)
```


# Interaction diagram

Can you use the function `interaction.plot` to create the following:
```{r echo=FALSE}
interaction.plot(festuca$pH, festuca$Calluna, response = festuca$Weight)
```

Here is a much nicer and more flexible approach to make interaction plots using
`tidyverse` functions:

```{r, echo=TRUE, message=FALSE}
# step 1. calculate means for each treatment combination
festuca_means <- 
  festuca %>% 
  group_by(Calluna, pH) %>% # <- remember to group by *both* factors
  summarise(Means = mean(Weight))
```

```{r, echo=TRUE}
# step 2. plot these as an interaction plot
ggplot(festuca_means, 
       aes(x = Calluna, y = Means, colour = pH, group = pH)) +
  geom_point(size = 4) + geom_line()
```

Read @Childs2021APS: [27.6.1](https://dzchilds.github.io/stats-for-bio/two-way-anova-in-r.html#understanding-the-model-graphically) and consider the following figure:


```{r}
#| label: pressure
#| echo: false
#| fig-cap: "Understanding the model graphically"


knitr::include_graphics("https://dzchilds.github.io/stats-for-bio/images/interaction-diagrams.png")
```

# Multiple comparison tests

```{r, echo=TRUE}
TukeyHSD(festuca_model, which = 'pH:Calluna')
```
```

```{r, echo=TRUE}
HSD.test(festuca_model, trt = c("pH", "Calluna"), console = TRUE)
```

# Drawing conclusions and presenting results

Here are some code examples how the shown graphs above could be made much nicer.

```{r, echo=TRUE}
# step 1. calculate means for each treatment combination
festuca_stats <- 
  festuca %>% 
  group_by(Calluna, pH) %>% # <- remember to group by the two factors
  summarise(Means = mean(Weight), SEs = sd(Weight)/sqrt(n()))
```


```{r, echo=TRUE, message = FALSE}
# step 1. calculate means for each treatment combination
festuca_stats <- 
  festuca %>% 
  group_by(Calluna, pH) %>% # <- remember to group by the two factors
  summarise(Means = mean(Weight), SEs = sd(Weight)/sqrt(n()))
```


```{r, echo=TRUE, message = FALSE}
# step 2. plot these as an interaction plot
ggplot(festuca_stats, 
       aes(x = Calluna, y = Means, colour = pH,
           ymin = Means - SEs, ymax = Means + SEs)) +
  # this adds the mean
  geom_point(size = 3) +
  # this adds the error bars
  geom_errorbar(width = 0.1) +
  # controlling the appearance
  scale_y_continuous(limits = c(2, 7)) + 
  xlab("Calluna") + ylab("Festuca yield (g dry weight)") + 
  # use a more professional theme
  theme_bw()
```


```{r, echo=TRUE}
# define a position adjustment 
pos <- position_dodge(0.15)
# make the plot
ggplot(festuca_stats, 
       aes(x = Calluna, y = Means, colour = pH,
           ymin = Means - SEs, ymax = Means + SEs)) +
  # this adds the mean (shift positions with 'position =')
  geom_point(size = 3, position = pos) +
  # this adds the error bars (shift positions with 'position =')
  geom_errorbar(width = 0.1, position = pos) +
  # controlling the appearance
  scale_y_continuous(limits = c(2, 7)) + 
  xlab("Calluna") + ylab("Festuca yield (g dry weight)") + 
  # use a more professional theme
  theme_bw()
```


```{r, echo=TRUE}
ggplot(festuca_stats, 
       aes(x = Calluna, y = Means, fill = pH,
           ymin = Means - SEs, ymax = Means + SEs)) +
  # this adds the mean
  geom_col(position = position_dodge()) +
  # this adds the error bars
  geom_errorbar(position = position_dodge(0.9), width=.2) +
  # controlling the appearance
  xlab("Calluna") + ylab("Festuca yield (g dry weight)")
```


# References
