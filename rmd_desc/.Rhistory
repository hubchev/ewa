alterl2,
alterl3,
alterl4,
alterl5,
alterl6,
alterl7,
alterl8,
alterl9,
alterl10) |>
droplevels()
gglikert(df_alterl, sort = "ascending", sort_method = "mean")
df_alterl <- df |>
select(alterl1,
alterl2,
alterl3,
alterl4,
alterl5,
alterl6,
alterl7,
alterl8,
alterl9,
alterl10) |>
drop_unused_labels()
gglikert(df_alterl, sort = "ascending", sort_method = "mean")
gglikert(df_alterl, sort = "ascending", sort_method = "mean", exclude_fill_values = "Don't know")
gglikert(df_alterl, sort = "ascending", sort_method = "mean", exclude_fill_values = "Weiß nicht")
gglikert(df_alterl, sort = "ascending", sort_method = "mean", exclude_fill_values = c("Weiß nicht", "Verweigert"))
gglikert(df_alterl, sort = "ascending", exclude_fill_values = c("Weiß nicht", "Verweigert"))
gglikert(df_alterl, exclude_fill_values = c("Weiß nicht", "Verweigert"))
gglikert_stacked(df_alterl)
gglikert_stacked(df_alterl, exclude_fill_values = c("Weiß nicht", "Verweigert"))
?gglikert_stacked
gglikert_stacked(df_alterl, exclude_fill_values = c("Weiß nicht", "Verweigert"))
gglikert_stacked(df_alterl, include = select(alterl1, alterl2))
gglikert_stacked(df_alterl, include = alterl1,alterl2)
gglikert_stacked(df_alterl, include = alterl1 alterl2)
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
likert_levels <- c(
"Gar nicht",
"Mäßig",
"Ein wenig",
"Stark",
"Sehr stark"
)
df_alterl |>
mutate(across(everything(), ~ factor(.x, levels = likert_levels))) |>
gglikert()
df_alterl_likert <- df_alterl |>
mutate(across(everything(), ~ factor(.x, levels = likert_levels)))
gglikert_stacked(df_alterl_likert, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl_likert, include = c(alterl1, alterl2))
identical(df_alterl, df_alterl_likert)
identical(df_alterl, df_alterl_likert)
val_lab(df_alterl$alterl1)
var_lab(df_alterl$alterl1)
var_lab(df_alterl_likert$alterl1)
var_lab(df_alterl)
# Assuming df_alterl is your data frame
variable_labels <- lapply(df_alterl, get_label)
library(sjlabelled)
# Assuming df_alterl is your data frame
variable_labels <- lapply(df_alterl, get_label)
# Print the variable labels
print(variable_labels)
set_label(df_alterl_likert$alterl1, "Alternserleben: Beziehungen und andere Menschen mehr schätzen")
label(df_alterl_likert$alterl1) <- "Alternserleben: Beziehungen und andere Menschen mehr schätzen"
df2 <- df_alterl %>%
mutate(across(starts_with("alterl"), ~ set_na(., values = -2)))
df_alterl$alterl1 <- set_na(df_alterl$alterl1, values = -2)
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl_likert, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl_likert, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl_likert, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
df_alterl |>
mutate(across(everything(), ~ factor(.x, levels = likert_levels))) |>
gglikert()
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl_likert, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl_likert, include = c(alterl1, alterl2))
df_alterl_likert <- df_alterl |>
mutate(across(everything(), ~ factor(.x, levels = likert_levels)))
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl_likert, include = c(alterl1, alterl2))
gglikert(df_alterl, exclude_fill_values = c("Weiß nicht", "Verweigert"))
gglikert(df_alterl, exclude_fill_values = c("Weiß nicht", "Verweigert"))
gglikert(df_alterl,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert_stacked(df_alterl, include = c(alterl1, alterl2))
gglikert_stacked(df_alterl)
gglikert_stacked(df_alterl,
sort = "ascending"
)
df_alterl <- df |>
select(alterl1,
alterl2,
alterl3,
alterl4,
alterl5,
alterl6,
alterl7,
alterl8,
alterl9,
alterl10) |>
drop_na() |>
drop_unused_labels()
gglikert(df_alterl,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert_stacked(df_alterl,
sort = "ascending"
)
View(df)
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse(any(c(across(alter1:alter10) < 0)), 1, 0))
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse(any(c(across(alterl1:alterl10) < 0)), 1, 0))
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse(any(c(across(alterl1:alterl10) < 0)), 1, 0)) |>
filter(has_na == 1)
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse(any(c(across(alterl1:alterl10) < 0)), 1, 0)) |>
filter(has_na == 1)
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse(any(c(across(alterl1:alterl10) < 0)), 1, 0))
summary(df_alterl_balance)
summary(df_alterl)
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse(across(alterl1:alterl10) < 0  ), 1, 0))
?rowMins
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse( rowMins(df_alterl) < 0  , 1, 0))
library("matrixStats")
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse( rowMins(df_alterl) < 0  , 1, 0))
mutate(has_na = ifelse( rowMins(across(alterl1-alterl10) < 0  , 1, 0))
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse( rowMins(across(alterl1-alterl10) < 0  , 1, 0)))
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse( rowMins(across(alterl1:alterl10) < 0  , 1, 0)))
df_alterl_balance <- df_alterl |>
mutate(has_na = ifelse( rowMins(across(alterl1:alterl10)) < 0  , 1, 0))
df_alterl_balance <- df_alterl |>
rowwise() |>
mutate(has_na = ifelse( across(alterl1:alterl10) < 0  , 1, 0))
View(df_alterl_balance)
df_alterl_balance |>
select(alterl1, )
View(df_alterl_balance)
bal <- df_alterl %>%
rowwise() %>%
mutate(has_negative = as.integer(any(c(across(alterl1:alterl10)) < 0)))
View(bal)
bal <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0))
View(bal)
bal <- df_alterl %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0))
bal <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0))
bal <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0)) |>
filter(has_negative == 0)
summary(df_alterl_balance)
df_alterl_balance <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0)) |>
filter(has_negative == 0)
summary(df_alterl_balance)
df_alterl_balance <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0)) |>
filter(has_negative == 0) |>
select(starts_with(alter))
df_alterl_balance <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0)) |>
filter(has_negative == 0) |>
select(starts_with("alter"))
rm(list = ls())
load("data/gesis.RData")
library(tidyverse)
rm(list = ls())
load("data/gesis.RData")
df <- dfdta |>
select(starts_with("alter"),
ALT_agegroup,
ALT_sex,
famst1, famst7,
demtectcorr,
kogstat,
final,
geschlecht)
df_alterl <- df |>
select(alterl1,
alterl2,
alterl3,
alterl4,
alterl5,
alterl6,
alterl7,
alterl8,
alterl9,
alterl10) |>
drop_unused_labels()
summary(df_alterl)
df_alterl_balance <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0)) |>
filter(has_negative == 0) |>
select(starts_with("alter"))
summary(df_alterl_balance)
gglikert(df_alterl,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert(df_alterl_balance,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert(df_alterl,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert(df_alterl_balance,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
rm(list = ls())
load("data/gesis.RData")
df <- dfdta |>
select(starts_with("alter"),
ALT_agegroup,
ALT_sex,
famst1, famst7,
demtectcorr,
kogstat,
final,
geschlecht)
df_alterl <- df |>
select(alterl1,
alterl2,
alterl3,
alterl4,
alterl5,
alterl6,
alterl7,
alterl8,
alterl9,
alterl10) |>
drop_unused_labels()
summary(df_alterl)
df_alterl_balance <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0)) |>
filter(has_negative == 0) |>
select(starts_with("alter"))
summary(df_alterl_balance)
gglikert(df_alterl,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert(df_alterl_balance,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert(df_alterl_balance,
sort = "ascending"
)
gglikert(df_alterl_balance)
View(df_alterl_balance)
df_alterl_balance <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0)) |>
filter(has_negative == 0) |>
select(starts_with("alter")) |>
as_tibble()
summary(df_alterl_balance)
gglikert(df_alterl,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert(df_alterl_balance)
gglikert(df_alterl_balance,
sort = "ascending"
)
gglikert(df_alterl,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert(df_alterl_balance,
sort = "ascending"
)
vignette("gglikert")
sumstat_alter <- df |>
get_summary_stats(starts_with("alterl")  # columns to calculate for
type = "five_number")
sumstat_alter <- df |>
get_summary_stats(starts_with("alterl") ) # columns to calculate for
?apa_table
?get_summary_stats
# Create an extended version with a bunch of stats
d.summary.extended <- df_alterl |>
psych::describe(quant=c(.25,.75)) |>
as_tibble(rownames="rowname")  |>
print()
?describe
# Create an extended version with a bunch of stats
d.summary.extended <- df_alterl |>
psych::describe() |>
as_tibble(rownames="rowname")  |>
print()
# Create an extended version with a bunch of stats
d.summary.extended <- df_alterl |>
psych::describe() |>
as_tibble(rownames="rowname")  |>
select(-skew)
# Create an extended version with a bunch of stats
d.summary.extended <- df_alterl |>
psych::describe() |>
as_tibble(rownames="rowname")  |>
select(-skew) |>
print()
# Create an extended version with a bunch of stats
d.summary.extended <- df_alterl |>
psych::describe() |>
as_tibble(rownames="rowname")  |>
select(-skew, -kurtosis) |>
print()
# Create an extended version with a bunch of stats
d.summary.extended <- df_alterl |>
psych::describe() |>
as_tibble()  |>
select(-skew, -kurtosis, -range) |>
print()
# Create an extended version with a bunch of stats
d.summary.extended <- df_alterl |>
psych::describe() |>
as_tibble(rownames="Variable")  |>
select(-skew, -kurtosis, -range) |>
print()
# Create an extended version with a bunch of stats
d.summary.extended <- df_alterl |>
psych::describe() |>
as_tibble(rownames="Question")  |>
select(-skew, -kurtosis, -range) |>
print()
?get_summary_stats
citation(rstatix)
citation("rstatix")
citation("psych")
?apa_table()
descriptives <- dfdta |>
# filter(alterl1 > 0) |>
group_by(geschlecht)  |>
summarize(
Mean = mean(alterl1)
, Count = n()
, SD = sd(alterl1)
, Min = min(alterl1)
, Max = max(alterl1)
)
sumstat_alter_psych <- df |>
select(starts_with("alterl")) |>
psych::describe() |>
as_tibble(rownames="Question")  |>
select(-skew, -kurtosis, -range)
citation("dplyr")
df_alterl <- df |>
select(alterl1,
alterl2,
alterl3,
alterl4,
alterl5,
alterl6,
alterl7,
alterl8,
alterl9,
alterl10)
var_lab(df_alterl$alterl1)
val_lab(df_alterl$alterl1)
unique(df_alterl$alterl1)
table(df_alterl$alterl1)
df_alterl_na <- df_alterl |>
mutate(across(alterl1:alterl10, ~ ifelse(. < 1 | . > 5, NA, .)))
View(df_alterl_na)
df_alterl_na <- df_alterl |>
mutate(across(alterl1:alterl10, ~ ifelse(. < 1 | . > 5, NA, .)))
df_alterl_na <- df_alterl |>
mutate(dd=across(alterl1:alterl10, ~ ifelse(. < 1 | . > 5, NA, .)))
View(df_alterl_na)
?gglikert
citation("ggstats")
vignette("gglikert")
gglikert(df_alterl_balance,
sort = "ascending"
)
df_alterl_balance <- df_alterl %>%
rowwise() %>%
mutate(has_negative = ifelse(any(c(across(alterl1:alterl10)) < 0), 1, 0)) |>
filter(has_negative == 0) |>
select(starts_with("alter")) |>
as_tibble()
gglikert(df_alterl,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert(df_alterl_balance,
sort = "ascending"
)
gglikert_stacked(df_alterl,
sort = "ascending"
)
df_alterl <- df |>
select(alterl1,
alterl2,
alterl3,
alterl4,
alterl5,
alterl6,
alterl7,
alterl8,
alterl9,
alterl10)
var_lab(df_alterl$alterl1)
val_lab(df_alterl$alterl1)
table(df_alterl$alterl1)
df_alterl_na <- df_alterl |>
mutate(dd=across(alterl1:alterl10, ~ ifelse(. < 1 | . > 5, NA, .)))
unique(df_alterl_na$alterl1)
df_alterl_na2 <- df_alterl |>
mutate(across(alterl1:alterl10, ~ case_when(. < 1 | . > 5 ~ NA_character_,
TRUE ~ as.character(.))))
unique(df_alterl_na2$alterl1)
gglikert(df_alterl,
exclude_fill_values = c("Weiß nicht", "Verweigert"),
sort = "ascending"
)
gglikert_stacked(df_alterl_balance,
sort = "ascending"
)
df_alterl |>
tabyl(alterl1, alterl2)
??tabyl
# load packages that are already installed and install packages that are not
# installed yet and then load them:
pacman::p_load(tinylabels,
haven,
labelled,
janitor,
skimr,
rstatix,
HH,
likert,
expss,
tidyr,
ggstats,
psych,
sjlabelled,
tidyverse)
df_alterl |>
tabyl(alterl1)
df_alterl_balance |>
tabyl(alterl1, alterl2)
df_alterl_balance |>
tabyl(alterl1)
df_alterl |>
tabyl()
df_alterl |>
map(~ tabyl(.))
df_alterl |>
tabyl(alterl1) |>
table(alterl1)
df_alterl |>
tabyl(alterl1) |>
table(alterl1)
df_alterl |>
table(alterl1)
table(df_alterl$alterl1)
df_alterl |>
map(~ table(.))
df_alterl |>
tabyl(alterl1)
df_alterl |>
map(~ tabyl(.))
map(~ prop.table(table(.))
df_alterl |>
df_alterl |>
map(~ prop.table(table(.)))
df_alterl |>
map(~ prop.table(.))
?table()
table(df_alter$alterl1)
?map()
citation("purrr")
?prop.table
df_alterl |>
map(~ proportions(table(.)))
?tabyl()
citation("janitor")
table(df$alterl1)
